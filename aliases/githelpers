#!/usr/bin/env nash

#
# git aliases
#

fn gitbranch() {
	var branch, status <= git rev-parse --abbrev-ref HEAD | xargs echo -n

	if $status == "0" {
		return $branch
	}
}

#
# gpull: is a helper for easy pulls.
#
fn gpull() {
	var branch <= gitbranch()

	git pull origin $branch
}

bindfn gpull gpull

#
# gcheck: is a helper for easy checkouts.
#
#  If executed without passing a branch it will prompt for a list of
#  existing branches for checkout.
#  If executed passing a non-existent branch, then it will create the
#  branch, otherwise it will only checkout to given branch.
#
fn gcheck(branch) {
	if $branch == "" {
		branch <= (
			git branch |
			sed "s/^[* \\t]*//g" |
			fzf --header "Select the branch: " |
			xargs echo -n
		)
		
		git checkout $branch
	} else {
		var branchs <= git branch | sed "s/^[* \\t]*//g"
		
		branchs <= split($branchs, "\n")
		
		for b in $branchs {
			if $b == $branch {
				git checkout $branch
				
				return
			}
		}
		
		git checkout -b $branch
	}

	return $branch
}

bindfn gcheck gcheck

fn gpush() {
	var branch <= gitbranch()

	git push origin $branch
}

bindfn gpush gpush
